name: github release

on:
  pull_request:
    types:
      - closed
    branches:
      - main

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  create-release:
    name: generate docs-website github release notes (optional)
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: '0'
      - name: Setup python
        uses: actions/setup-python@v2

      - name: Get last release tag
        id: get-last-tag
        run: |
          echo LAST_RELEASE=$(git describe --tags --abbrev=0) >> $GITHUB_ENV
          echo $LAST_RELEASE

      - name: Install Python Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install PyGithub
          pip install invoke

      - name: Create Updates
        id: py-get-updates
        run: |
          python ./scripts/actions/release-notes.py

      - name: Create new release tag
        id: create-new-tag
        run: |
          LAST_TAG_NUM=$(echo ${{ env.LAST_RELEASE }} | sed 's/release\-//')
          x=1
          while git show-ref --tags "release-$((LAST_TAG_NUM + $x))"
          do
            echo "release-$((LAST_TAG_NUM + $x)) already exists, trying release-$((LAST_TAG_NUM + $x + 1))"
            x=$(( $x + 1 ))
          done
          echo NEW_TAG=$(echo "release-$((LAST_TAG_NUM + $x))") >> $GITHUB_ENV

      - name: Create release
        run: gh release create ${{ env.NEW_TAG }} -t ${{ env.NEW_TAG }} -n "${{ env.RESULT }}"
