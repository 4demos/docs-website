Transpiled applications, such as those written in TypeScript or Babel, will show error stacktraces that typically point to files, lines, and functions within the built files, rather than the source files. You can direct Node to show stack traces that reference your source code by enabling Node's source map support in the `node` command that starts your application: 

  ```
  node --enable-source-maps -r newrelic ./dist/server.js
  ```
  Starting your application with source maps enabled, you 
  
Enabling source map support in Node.js can provide developers with a more meaningful error trace which points to lines and functions within the source code. 

As an example, an application run without source map support might display an error stack trace like this: 

```shell
Error: Failed to get all entries in model
    at /dist/models/entries.js:41:23
    ... (multiple functions in New Relic Node agent js files)
    at /dist/models/entries.js:39:35
    at Generator.next (<anonymous>)
```
Note that the trace refers to the built files in `/dist`.

The same application with source map support enabled will instead reference the source code files: 
```shell
Error: Failed to get all entries in model
    at <anonymous> (/src/models/entries.ts:28:13)
    ... (multiple functions in New Relic Node agent js files)
    at <anonymous> (/src/models/entries.ts:26:19)
    at Generator.next (<anonymous>)    
```
This stack trace points to specific functions and line numbers within your source files, so you can find errors more easily. 

