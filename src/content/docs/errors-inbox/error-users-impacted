---
title: 'Track users impacted with errors inbox'
metaDescription: "Triage more effectively by viewing how many users are impacted by an error group."
---

## Triage more effectively with users impacted data [#triage]

You can now see the number of users impacted by an error group which allows you to focus your effort on the 
highest impacting error groups. Users impacted are listed next to the occurrences metric in the list view. 
You can also set up Alerts for error groups impacting more than a certain number of users (see details below - link).

<!-- ADD image here  --> 


## Getting started [#getting-started]

User impact metrics are collected automatically if your error events have an attribute identifying the end user. 
For agent’s that don’t natively support adding a user identifier to telemetry we recommend adding a custom attribute and 
following OpenTelemetry’s convention attribute for identity attributes, enduser.id. The process of sending custom attributes 
to New Relic is detailed here. 

## Attribute conventions to capture users impacted [#attributes]
There are multiple common conventions for naming end user attributes. We will first check for enduser.id. <!-- please format enduser.id  --> 
We will then use the following attributes*

userId
userEmail
user
email 

*Checked in order of priority

### Querying for users impacted [#alerts]

The number of users impacted on an error group is recorded as a Metric data type with the name 'newrelic.error.group.user_impact'. One can view the fields on this metric with the following NRQL string:

SELECT keyset() FROM Metric WHERE metricName='newrelic.error.group.user_impact'

For more information on querying New Relic metrics see Querying dimensional metrics.

## Alerting on Users impacted
By creating an alert condition on NRQL, developers can trigger alerts when the amount of Users impacted by errors exceeds a threshold.

Creating this alert requires determining the NRQL string which measures the amount of Users Impact in the way which best captures your use case.

As an example, the below NRQL string measures the amount of unique users which have been impacted by errors coming from a specific entity.
SELECT uniqueCount(newrelic.error.group.user_impact) FROM Metric WHERE metricName='newrelic.error.group.user_impact' AND entity.guid=’RXxCUk9XU9182nNEFQUExJQ0FLsU9OfDgzNzgwNw’ FACET error.group.guid TIMESERIES

Read more about using the uniqueCount() function, and finding the id for your error producing entities.

Similarly, the below NRQL string measures the total number of users impacted by errors from all entities under the account in the last hour.
SELECT count(newrelic.error.group.user_impact) FROM Metric WHERE metricName='newrelic.error.group.user_impact' SINCE 1 hour ago TIMESERIES


Once the NRQL string which should be alerts on is determined, it can be used as the signal parameter Alert condition which uses NRQL alert. Details regarding how your alert creation tips, how threshold can be evaluated, and examples are documented in the Alerts and AI docs.

Learn more about Alerts and AI.

