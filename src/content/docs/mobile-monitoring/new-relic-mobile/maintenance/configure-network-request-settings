---
title: Configure network request settings
tags:
  - Mobile monitoring settings
  - Network requests
metaDescription: Block or allow hostnames, create rules for status codes, and create aliases for hostnames
---

The mobile network request settings page can help you customize how network metrics and events are reported.

Use the network request settings page to customize how network metrics and events are reported. You can do things like:
* [Block/allow hostnames](#blockallow-hostnames)
* [Ignore HTTP status codes](#ignore-status-codes)
* [Group sub-domains with an alias](#group-into-alias)

To configure these settings, go to **[one.newrelic.com](https://one.newrelic.com/all-capabilities) > Mobile (select a mobile app) > Settings > Network settings**.

## Block/allow hostnames [#blockallow-hostnames]

Add a hostname to the block list to ignore the hosts you don't care about.

<img>


## Ignore HTTP status codes [#ignore-status-codes]

Ignore a specific HTTP error status code:

1. On the **Network settings page**, select the **Status codes** tab.
2. Click **Create a status code rule**.
   <img>
3. Enter a host, such as mycommerce.com/checkout.
4. Enter a status code(s) (separate multiple codes with commas).
5. Click **Add to list**. Wait up until 2 hours for the rule to be applied.

## Group sub-domains with an alias [#group-into-alias]

You can group sub-domains into an alias:

1. On the **Network settings** page, select the **Aliases and groups** tab.
2. Click **Create an alias**.
   <img>
3. Enter a host with * for a subdomain.
4. Enter a matching alias.
5. Click **Save alias**. Wait up until 2 hours for the rule to be applied.

### Alias examples

When using `*` (a wildcard), the regex rules are slightly different. The `*` wildcard is used for a whole segment, or the values between two dots in a hostname (i.e., the whole segment for hostname.1219.com is 1219).

Here are some examples of successfully using wildcards to create an alias:

<table>
  <thead>
    <tr>
      <th>
      Hosts
      </th>
      <th>
        Alias
      </th>
      <th>
        Example domain
      </th>
      <th>
        Result
      </th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>
        192.168.*.100
      </td>
      <td>
        LOCAL
      </td>
      <td>
        192.168.10.100
      </td>
      <td>
        LOCAL
      </td>
    </tr>
    <tr>
      <td>
        tbr.*.something.com
      </td>
      <td>
        tbr.*.something.com
      </td>
      <td>
        tbr.gh99898.something.com
      </td>
      <td>
        tbr.*.something.com
      </td>
    </tr>
    <tr>
      <td>
        api1.mydomain.co.uk
      </td>
      <td>
        API
      </td>
      <td>
        api1.mydomain.co.uk
      </td>
      <td>
        API
      </td>
    </tr>
    <tr>
      <td>
        api2.mydomain.co.uk
      </td>
      <td>
        API
      </td>
      <td>
        api2.mydomain.co.uk
      </td>
      <td>
        API
      </td>
    </tr>
  </tbody>
</table>

Now that you've seen some example of how this works, let's look at some examples of *what won't work*.

<table>
  <thead>
    <tr>
      <th>
      Hosts
      </th>
      <th>
        Alias
      </th>
      <th>
        Example domain
      </th>
      <th>
        Result
      </th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>
        tbr.gh*.something.com
      </td>
      <td>
        tbr.gh*.something.com
      </td>
      <td>
        tbr.gh99898.something.com
      </td>
      <td>
        tbr.gh99898.something.com
      </td>
    </tr>
    <tr>
      <td>
        cs-*.company.jp
      </td>
      <td>
        cs-*.company.jp
      </td>
      <td>
        cs-23.company.jp
      </td>
      <td>
        cs-23.company.jp
      </td>
    </tr>
    <tr>
      <td>
        cs-*.company.jp
      </td>
      <td>
        customer_survey
      </td>
      <td>
        cs-*.company.jp
      </td>
      <td>
        customer_survey
      </td>
    </tr>
  </tbody>
</table>

Remember, a wildcard will only affect a whole segment. Since the `*` can only be used for a full segment, the `*` here will be taken literally and not as a wildcard.